You are an assistant that can transform natural language to SQL queries

-- Dumped from database version 14.11
-- Dumped by pg_dump version 14.11

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: alert_on_type; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public.alert_on_type AS ENUM (
    '4XX',
    '5XX',
    'ERR'
);


ALTER TYPE public.alert_on_type OWNER TO api;

--
-- Name: api_key_status; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public.api_key_status AS ENUM (
    'active',
    'inactive'
);


ALTER TYPE public.api_key_status OWNER TO api;

--
-- Name: appProvisionStatus; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public."appProvisionStatus" AS ENUM (
    'pending',
    'ready',
    'failed'
);


ALTER TYPE public."appProvisionStatus" OWNER TO api;

--
-- Name: cageUsageTier; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public."cageUsageTier" AS ENUM (
    'trial',
    'pro',
    'enterprise'
);


ALTER TYPE public."cageUsageTier" OWNER TO api;

--
-- Name: deploymentStatus; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public."deploymentStatus" AS ENUM (
    'initiated',
    'uploading',
    'packaging',
    'provisioning',
    'deployed',
    'failed',
    'cancelled'
);


ALTER TYPE public."deploymentStatus" OWNER TO api;

--
-- Name: deploymentType; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public."deploymentType" AS ENUM (
    'cli',
    'github',
    'bitbucket',
    'gitlab',
    'redeploy',
    'dashboard',
    'zip',
    'auto',
    'support'
);


ALTER TYPE public."deploymentType" OWNER TO api;

--
-- Name: enclave_kernel_refresh_job_status_enum; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public.enclave_kernel_refresh_job_status_enum AS ENUM (
    'scheduled',
    'in_progress',
    'completed',
    'failed',
    'skipped'
);


ALTER TYPE public.enclave_kernel_refresh_job_status_enum OWNER TO api;

--
-- Name: encryption_mode; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public.encryption_mode AS ENUM (
    'request',
    'response'
);


ALTER TYPE public.encryption_mode OWNER TO api;

--
-- Name: functionDeploymentStatus; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public."functionDeploymentStatus" AS ENUM (
    'initiated',
    'creatingRepo',
    'uploadingTemplate',
    'importingRepo',
    'uploading',
    'startingBuild',
    'packaging',
    'building',
    'provisioning',
    'deployed',
    'failed',
    'cancelled',
    'retrying',
    'queuedForBuilding'
);


ALTER TYPE public."functionDeploymentStatus" OWNER TO api;

--
-- Name: functionDeploymentType; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public."functionDeploymentType" AS ENUM (
    'github',
    'bitbucket',
    'gitlab',
    'cli',
    'dashboard',
    'support',
    'redeploy',
    'auto',
    'zip'
);


ALTER TYPE public."functionDeploymentType" OWNER TO api;

--
-- Name: functionLanguage; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public."functionLanguage" AS ENUM (
    'node@16',
    'node@18',
    'python@3.7',
    'python@3.8',
    'python@3.9',
    'node@20',
    'python@3.10',
    'python@3.11'
);


ALTER TYPE public."functionLanguage" OWNER TO api;

--
-- Name: function_region_status; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public.function_region_status AS ENUM (
    'initiated',
    'uploading',
    'packaging',
    'provisioning',
    'deployed',
    'failed',
    'cancelled'
);


ALTER TYPE public.function_region_status OWNER TO api;

--
-- Name: globalroles; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public.globalroles AS ENUM (
    'user',
    'support',
    'superuser'
);


ALTER TYPE public.globalroles OWNER TO api;

--
-- Name: invitestatus; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public.invitestatus AS ENUM (
    'pending',
    'failed',
    'accepted'
);


ALTER TYPE public.invitestatus OWNER TO api;

--
-- Name: mtls_cert_states; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public.mtls_cert_states AS ENUM (
    'initiated',
    'pending',
    'failed',
    'successful'
);


ALTER TYPE public.mtls_cert_states OWNER TO api;

--
-- Name: mtls_rotate_warning; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public.mtls_rotate_warning AS ENUM (
    '7-days',
    '3-days',
    '1-day'
);


ALTER TYPE public.mtls_rotate_warning OWNER TO api;

--
-- Name: region_status; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public.region_status AS ENUM (
    'initiated',
    'uploading',
    'packaging',
    'provisioning',
    'deployed',
    'failed',
    'cancelled'
);


ALTER TYPE public.region_status OWNER TO api;

--
-- Name: relayAction; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public."relayAction" AS ENUM (
    'encrypt',
    'decrypt'
);


ALTER TYPE public."relayAction" OWNER TO api;

--
-- Name: relayMessageType; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public."relayMessageType" AS ENUM (
    'request',
    'response'
);


ALTER TYPE public."relayMessageType" OWNER TO api;

--
-- Name: relayMethod; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public."relayMethod" AS ENUM (
    'GET',
    'HEAD',
    'POST',
    'PUT',
    'DELETE',
    'PATCH',
    'OPTIONS'
);


ALTER TYPE public."relayMethod" OWNER TO api;

--
-- Name: relaySelectionType; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public."relaySelectionType" AS ENUM (
    'header',
    'url',
    'json',
    'xml',
    'form'
);


ALTER TYPE public."relaySelectionType" OWNER TO api;

--
-- Name: relay_curve; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public.relay_curve AS ENUM (
    'secp256k1',
    'secp256r1'
);


ALTER TYPE public.relay_curve OWNER TO api;

--
-- Name: relay_custom_domain_status; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public.relay_custom_domain_status AS ENUM (
    'pending',
    'active',
    'inactive'
);


ALTER TYPE public.relay_custom_domain_status OWNER TO api;

--
-- Name: relay_verification_status; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public.relay_verification_status AS ENUM (
    'unverified',
    'reminded',
    'verified'
);


ALTER TYPE public.relay_verification_status OWNER TO api;

--
-- Name: scoped_api_key_grant; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public.scoped_api_key_grant AS ENUM (
    'cage:invoke',
    'cage:deploy',
    'cage:*',
    'function:run',
    'function:*'
);


ALTER TYPE public.scoped_api_key_grant OWNER TO api;

--
-- Name: teamAWSAccountStatus; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public."teamAWSAccountStatus" AS ENUM (
    'pending',
    'ready',
    'failed'
);


ALTER TYPE public."teamAWSAccountStatus" OWNER TO api;

--
-- Name: teamTier; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public."teamTier" AS ENUM (
    'free',
    'pro',
    'enterprise',
    'legacy'
);


ALTER TYPE public."teamTier" OWNER TO api;

--
-- Name: tee_cage_states; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public.tee_cage_states AS ENUM (
    'pending',
    'active',
    'deleting',
    'deleted',
    'initialized'
);


ALTER TYPE public.tee_cage_states OWNER TO api;

--
-- Name: userNotificationType; Type: TYPE; Schema: public; Owner: api
--

CREATE TYPE public."userNotificationType" AS ENUM (
    'SLACK',
    'GENERIC',
    'DISCORD',
    'ZAPIER'
);


ALTER TYPE public."userNotificationType" OWNER TO api;


--
-- Name: api_keys; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.api_keys (
    id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    secret_token text NOT NULL,
    team_id integer NOT NULL,
    status public.api_key_status,
    deleted_at timestamp with time zone,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    offset_bytes character varying(255),
    hashed_api_key character varying(255),
    app_uuid character varying(255)
);

--
-- Name: app_config; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.app_config (
    id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    app_uuid character varying(255),
    kms_key_arn character varying(2048),
    aws_account_id character varying(255),
    public_key text,
    encrypted_private_key text,
    aes_key_shard character varying(255),
    encrypted_ecdh_private_key text,
    ecdh_public_key text,
    ecdh_p256_public_key text,
    encrypted_ecdh_p256_private_key text,
    deleted_at timestamp with time zone,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    encrypted_key_shard text,
    encrypted_hashing_secret_key text
);

--
-- Name: apps; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.apps (
    id integer NOT NULL,
    team_uuid character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    uuid character varying(255) NOT NULL,
    deleted_at timestamp with time zone,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    default_app boolean DEFAULT false,
    status public."appProvisionStatus" DEFAULT 'pending'::public."appProvisionStatus",
    strict_mode boolean DEFAULT false,
    security_page boolean DEFAULT false,
    pci_mode boolean DEFAULT false
);

CREATE TABLE public.apps_outbound_destinations (
    id integer NOT NULL,
    relay_outbound_destination_id integer NOT NULL,
    app_uuid character varying(255) NOT NULL,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone,
    route_specific_fields_to_encrypt jsonb,
    deterministic_fields_to_encrypt jsonb,
    encrypt_empty_strings boolean,
    curve character varying(255) DEFAULT 'secp256k1'::character varying,
    uuid character varying(255),
    route_specific_fields_to_redact jsonb
);

--
-- Name: cages; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.cages (
    id integer NOT NULL,
    team_id integer NOT NULL,
    name character varying(255) NOT NULL,
    deleted_at timestamp with time zone,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    uuid text,
    s3_etag character varying(2048),
    deployed_at timestamp with time zone,
    current_lambda_version character varying(255),
    status character varying(255),
    playground_defaults jsonb,
    error character varying(255),
    error_message character varying(255),
    app_uuid character varying(255),
    disabled boolean DEFAULT false
);

--
-- Name: cages_whitelisted_domains; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.cages_whitelisted_domains (
    id integer NOT NULL,
    cage_id integer NOT NULL,
    domain_name character varying(255) NOT NULL,
    deleted_at timestamp with time zone,
    created_at timestamp with time zone,
    updated_at timestamp with time zone
);

--
-- Name: data_policies; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.data_policies (
    id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    app_uuid character varying(255) NOT NULL,
    data_role_uuid character varying(255) NOT NULL,
    statement text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone,
    schema jsonb
);

--
-- Name: data_policy_statements; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.data_policy_statements (
    id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    app_uuid character varying(255) NOT NULL,
    data_role_uuid character varying(255) NOT NULL,
    statement text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone
);

--
-- Name: data_roles; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.data_roles (
    id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    app_uuid character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    slug character varying(20) NOT NULL,
    state text DEFAULT 'active'::text,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone,
);

--
-- Name: deployment_regions; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.deployment_regions (
    id integer NOT NULL,
    deployment_id integer NOT NULL,
    region character varying(255) NOT NULL,
    status public.region_status DEFAULT 'initiated'::public.region_status,
    created_at timestamp with time zone,
    updated_at timestamp with time zone
);

--
-- Name: deployments; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.deployments (
    id integer NOT NULL,
    lambda_version_id character varying(255),
    s3_etag character varying(255),
    s3_version_id character varying(255),
    cage_version integer NOT NULL,
    commit_hash character varying(255),
    deployed_by_id integer,
    published boolean DEFAULT false NOT NULL,
    deleted_at timestamp with time zone,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    status public."deploymentStatus" DEFAULT 'initiated'::public."deploymentStatus",
    cage_id integer NOT NULL,
    branch_name character varying(255),
    deployed_at timestamp with time zone,
    externally_deployed_account character varying(255),
    type public."deploymentType",
    failure_reason character varying(255),
    deployed_by_team_id integer,
    deployed_by_user_name character varying(255)
);

--
-- Name: enclave_kernel_refresh_jobs; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.enclave_kernel_refresh_jobs (
    id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    enclave_uuid character varying(255) NOT NULL,
    terminated_at timestamp with time zone,
    detailed_job_status character varying(255),
    job_status public.enclave_kernel_refresh_job_status_enum DEFAULT 'scheduled'::public.enclave_kernel_refresh_job_status_enum NOT NULL,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);

--
-- Name: forms; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.forms (
    id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    app_uuid character varying(255) NOT NULL,
    relay_destination_uuid character varying(255) NOT NULL,
    form_name character varying(255) NOT NULL,
    form_source character varying(255) NOT NULL,
    form_fields_to_encrypt jsonb NOT NULL,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone
);

--
-- Name: function_deployment_regions; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.function_deployment_regions (
    id integer NOT NULL,
    deployment_id integer NOT NULL,
    region character varying(255) NOT NULL,
    status public.function_region_status DEFAULT 'initiated'::public.function_region_status,
    created_at timestamp with time zone,
    updated_at timestamp with time zone
);

--
-- Name: function_deployments; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.function_deployments (
    id integer NOT NULL,
    deleted_at timestamp with time zone,
    deployed_at timestamp with time zone,
    lambda_version_id character varying(255),
    s3_etag character varying(255),
    s3_version_id character varying(255),
    function_version integer NOT NULL,
    type public."functionDeploymentType",
    commit_hash character varying(255),
    branch_name character varying(255),
    deployed_by_id integer,
    deployed_by_team_id integer,
    published boolean DEFAULT false NOT NULL,
    failure_reason character varying(255),
    externally_deployed_account character varying(255),
    deployed_by_user_name character varying(255),
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    function_uuid character varying(255) NOT NULL,
    status public."functionDeploymentStatus" DEFAULT 'initiated'::public."functionDeploymentStatus",
    timeout integer,
    language public."functionLanguage"
);

--
-- Name: function_to_notification; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.function_to_notification (
    id integer NOT NULL,
    function_uuid character varying(255) NOT NULL,
    config_id integer NOT NULL,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone
);

--
-- Name: functions; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.functions (
    id integer NOT NULL,
    disabled boolean,
    deleted_at timestamp with time zone,
    playground_defaults jsonb,
    error_message character varying(255),
    current_lambda_version character varying(255),
    name character varying(255) NOT NULL,
    app_uuid character varying(255),
    error character varying(255),
    uuid text,
    s3_etag character varying(255),
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    team_uuid character varying(255) NOT NULL
);

--
-- Name: functions_environment_variables; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.functions_environment_variables (
    id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    function_uuid character varying(255) NOT NULL,
    key character varying(255) NOT NULL,
    value text NOT NULL,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone
);

--
-- Name: functions_inbound_whitelist; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.functions_inbound_whitelist (
    id integer NOT NULL,
    function_uuid text NOT NULL,
    address character varying(255) NOT NULL,
    deleted_at timestamp with time zone,
    created_at timestamp with time zone,
    updated_at timestamp with time zone
);

--
-- Name: functions_outbound_whitelist; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.functions_outbound_whitelist (
    id integer NOT NULL,
    function_uuid text NOT NULL,
    domain_name character varying(255) NOT NULL,
    deleted_at timestamp with time zone,
    created_at timestamp with time zone,
    updated_at timestamp with time zone
);

--
-- Name: github_repos; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.github_repos (
    id integer NOT NULL,
    repo_name character varying(255) NOT NULL,
    node_id character varying(255),
    url character varying(255),
    team_id integer NOT NULL,
    branch character varying(255),
    owner character varying(255) NOT NULL,
    cage_id integer,
    deleted_at timestamp with time zone,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    installation_id integer,
    disabled boolean DEFAULT false,
    github_account_type character varying(255),
    template_repo character varying(255),
    private_repo boolean DEFAULT false NOT NULL,
    directory character varying(255) DEFAULT '/'::character varying NOT NULL,
    app_id integer,
    function_id integer,
    function_uuid character varying(255)
);

--
-- Name: inbound_proxies; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.inbound_proxies (
    id integer NOT NULL,
    uuid character varying(255),
    team_id integer NOT NULL,
    proxy_hostname character varying(255),
    protocol character varying(255),
    destination_hostname character varying(255),
    fields_to_encrypt json,
    deleted_at timestamp with time zone,
    created_at timestamp with time zone,
    updated_at timestamp with time zone
);

--
-- Name: mtls_certificates; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.mtls_certificates (
    id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    relay_uuid character varying(255) NOT NULL,
    cert_name character varying(255) NOT NULL,
    expiry_date timestamp with time zone,
    cert_state public.mtls_cert_states NOT NULL,
    is_active boolean DEFAULT false NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone,
    active_since timestamp with time zone,
    failure_reason text,
    encrypted_password text NOT NULL,
    start_date timestamp with time zone,
    rotate_warning public.mtls_rotate_warning,
    consolidated_relay_uuid character varying(255)
);

--
-- Name: notification_config; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.notification_config (
    id integer NOT NULL,
    webhook_url character varying(255) NOT NULL,
    team_uuid character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone,
    alert_on public.alert_on_type[],
    type public."userNotificationType" DEFAULT 'SLACK'::public."userNotificationType",
    app_uuid character varying(255)
);

--
-- Name: rate_limits; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.rate_limits (
    id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    team_uuid character varying(255) NOT NULL,
    "limit" integer NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone
);

--
-- Name: regional_metrics; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.regional_metrics (
    id integer NOT NULL,
    team_uuid character varying(255) NOT NULL,
    metrics_periods_id integer NOT NULL,
    region text NOT NULL,
    relay_decryption_count bigint NOT NULL,
    cage_run_count bigint NOT NULL,
    deleted_at timestamp with time zone,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    status text,
    CONSTRAINT regional_metrics_status_check CHECK ((status = ANY (ARRAY['writing'::text, 'finished'::text])))
);

--
-- Name: relay_actions; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.relay_actions (
    id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    relay_destination_uuid character varying(255) NOT NULL,
    message_type public."relayMessageType" NOT NULL,
    action public."relayAction" NOT NULL,
    method public."relayMethod",
    path character varying(255),
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone
);

--
-- Name: relay_custom_domains; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.relay_custom_domains (
    id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    relay_destination_uuid character varying(255) NOT NULL,
    custom_domain character varying(255) NOT NULL,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone,
    status public.relay_custom_domain_status DEFAULT 'pending'::public.relay_custom_domain_status
);

--
-- Name: relay_data; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.relay_data (
    id integer NOT NULL,
    team_uuid character varying(255) NOT NULL,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    data jsonb,
    app_uuid character varying(255)
);

--
-- Name: relay_destinations; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.relay_destinations (
    id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    app_uuid character varying(255) NOT NULL,
    destination_domain character varying(255) NOT NULL,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone,
    evervault_domain character varying(255) NOT NULL,
    encrypt_empty_strings boolean DEFAULT true,
    curve public.relay_curve DEFAULT 'secp256r1'::public.relay_curve
);

--
-- Name: relay_outbound_destination; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.relay_outbound_destination (
    id integer NOT NULL,
    team_uuid character varying(255) NOT NULL,
    destination_domain character varying(255) NOT NULL,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone
);

--
-- Name: relay_selections; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.relay_selections (
    id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    relay_action_uuid character varying(255) NOT NULL,
    type public."relaySelectionType" NOT NULL,
    role_uuid character varying(255),
    selector character varying(510) NOT NULL,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone
);

--
-- Name: relay_to_notification; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.relay_to_notification (
    id integer NOT NULL,
    relay_uuid character varying(255) NOT NULL,
    config_id integer NOT NULL,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone
);

--
-- Name: relays; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.relays (
    id integer NOT NULL,
    team_uuid character varying(255) NOT NULL,
    uuid character varying(255) NOT NULL,
    domain character varying(255) NOT NULL,
    destination_domain character varying(255),
    fields_to_encrypt jsonb,
    deleted_at timestamp with time zone,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    route_specific_fields_to_encrypt jsonb,
    is_custom_domain boolean DEFAULT false,
    dns_targets jsonb,
    resolver text DEFAULT 'HTTPS'::text,
    verification_status text DEFAULT 'unverified'::text,
    deterministic_fields_to_encrypt jsonb,
    encryption_mode public.encryption_mode DEFAULT 'request'::public.encryption_mode NOT NULL,
    encrypt_empty_strings boolean DEFAULT true,
    notification_webhook_url character varying(255),
    curve character varying(255) DEFAULT 'secp256k1'::character varying,
    app_uuid character varying(255),
    is_tunnel boolean DEFAULT false,
    tunnel_server_reservation_id character varying(255),
    route_specific_fields_to_redact jsonb,
);

--
-- Name: roles; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.roles (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    deleted_at timestamp with time zone,
    created_at timestamp with time zone,
    updated_at timestamp with time zone
);


ALTER TABLE public.roles OWNER TO api;

--
-- Name: roles_id_seq; Type: SEQUENCE; Schema: public; Owner: api
--

CREATE SEQUENCE public.roles_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.roles_id_seq OWNER TO api;

--
-- Name: roles_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: api
--

ALTER SEQUENCE public.roles_id_seq OWNED BY public.roles.id;


--
-- Name: sandbox_requests; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.sandbox_requests (
    id integer NOT NULL,
    user_id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    http_request jsonb NOT NULL,
    deleted_at timestamp with time zone,
    created_at timestamp with time zone,
    updated_at timestamp with time zone
);


ALTER TABLE public.sandbox_requests OWNER TO api;

--
-- Name: sandbox_requests_id_seq; Type: SEQUENCE; Schema: public; Owner: api
--

CREATE SEQUENCE public.sandbox_requests_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sandbox_requests_id_seq OWNER TO api;

--
-- Name: sandbox_requests_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: api
--

ALTER SEQUENCE public.sandbox_requests_id_seq OWNED BY public.sandbox_requests.id;


--
-- Name: scoped_api_key_grants; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.scoped_api_key_grants (
    id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    api_key_uuid character varying(255) NOT NULL,
    resource character varying(255),
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone,
    grants character varying(255)
);


ALTER TABLE public.scoped_api_key_grants OWNER TO api;

--
-- Name: scoped_api_key_grants_id_seq; Type: SEQUENCE; Schema: public; Owner: api
--

CREATE SEQUENCE public.scoped_api_key_grants_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.scoped_api_key_grants_id_seq OWNER TO api;

--
-- Name: scoped_api_key_grants_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: api
--

ALTER SEQUENCE public.scoped_api_key_grants_id_seq OWNED BY public.scoped_api_key_grants.id;


--
-- Name: scoped_api_keys; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.scoped_api_keys (
    id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    app_uuid character varying(255) NOT NULL,
    api_key_prefix character varying(255) NOT NULL,
    hashed_api_key character varying(255) NOT NULL,
    state text DEFAULT 'active'::text,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone,
    name character varying(255),
    offset_bytes character varying(255),
    CONSTRAINT scoped_api_keys_state_check CHECK ((state = ANY (ARRAY['active'::text, 'inactive'::text, '[object Object]'::text])))
);

--
-- Name: team_aws_details; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.team_aws_details (
    id integer NOT NULL,
    team_id integer,
    public_key text,
    deleted_at timestamp with time zone,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    kms_key_arn character varying(2048),
    role_arn character varying(2048),
    aws_account_id character varying(255),
    status public."teamAWSAccountStatus" DEFAULT 'pending'::public."teamAWSAccountStatus",
    organizational_unit_id character varying(255),
    encrypted_private_key text,
    aes_key_shard character varying(255),
    encrypted_ecdh_private_key text,
    ecdh_public_key text,
    ecdh_p256_public_key text,
    encrypted_ecdh_p256_private_key text
);

--
-- Name: team_data_schemas; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.team_data_schemas (
    id integer NOT NULL,
    team_id integer NOT NULL,
    hostname character varying(255),
    schema_structure json,
    schema json,
    deleted_at timestamp with time zone,
    created_at timestamp with time zone,
    updated_at timestamp with time zone
);

--
-- Name: team_invites; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.team_invites (
    id integer NOT NULL,
    team_id integer NOT NULL,
    email character varying(255) NOT NULL,
    status public.invitestatus DEFAULT 'pending'::public.invitestatus,
    role_id integer NOT NULL,
    invited_by_id integer NOT NULL,
    deleted_at timestamp with time zone,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    invitee_id integer,
    uuid character varying(255) NOT NULL
);

--
-- Name: teams; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.teams (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    deleted_at timestamp with time zone,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    uuid character varying(255),
    setup_mode boolean DEFAULT true,
    stripe_customer_id character varying(255) DEFAULT ''::character varying,
    email_notifications boolean DEFAULT true NOT NULL,
    test_mode boolean DEFAULT false,
    last_billing_job_run timestamp with time zone,
    role_arn character varying(2048),
    status public."teamAWSAccountStatus" DEFAULT 'pending'::public."teamAWSAccountStatus",
    strict_mode boolean DEFAULT false,
    security_page boolean DEFAULT false,
    tier public."teamTier" DEFAULT 'legacy'::public."teamTier",
    mfa boolean DEFAULT false,
    cage_beta_ends timestamp with time zone,
    utm_source character varying(255) DEFAULT 'unknown'::character varying,
    utm_campaign character varying(255) DEFAULT 'unknown'::character varying,
    utm_medium character varying(255) DEFAULT 'unknown'::character varying,
    utm_term character varying(255) DEFAULT 'unknown'::character varying,
    utm_content character varying(255) DEFAULT 'unknown'::character varying,
    referrer character varying(255) DEFAULT 'unknown'::character varying
);

--
-- Name: teams_to_users; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.teams_to_users (
    id integer NOT NULL,
    team_id integer NOT NULL,
    user_id integer NOT NULL,
    user_role_id integer NOT NULL,
    deleted_at timestamp with time zone,
    created_at timestamp with time zone,
    updated_at timestamp with time zone
);

--
-- Name: tee_cage_deployments; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.tee_cage_deployments (
    id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    cage_uuid character varying(255) NOT NULL,
    version_uuid character varying(255) NOT NULL,
    signing_cert_uuid character varying(255) NOT NULL,
    debug_mode boolean DEFAULT false,
    created_at timestamp with time zone NOT NULL,
    started_at timestamp with time zone,
    updated_at timestamp with time zone,
    completed_at timestamp with time zone,
    timed_out boolean DEFAULT false NOT NULL,
    first_deployment_after_disable boolean DEFAULT false
);

--
-- Name: tee_cage_regional_deployments; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.tee_cage_regional_deployments (
    id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    deployment_uuid character varying(255),
    deployment_order integer,
    region character varying(255),
    failure_reason text,
    deploy_status text DEFAULT 'pending'::text,
    created_at timestamp with time zone NOT NULL,
    started_at timestamp with time zone,
    updated_at timestamp with time zone,
    completed_at timestamp with time zone,
    detailed_status text,
    CONSTRAINT tee_cage_regional_deployments_deploy_status_check CHECK ((deploy_status = ANY (ARRAY['pending'::text, 'deploying'::text, 'ready'::text, 'failed'::text, '[object Object]'::text])))
);

--
-- Name: tee_cage_scaling_configs; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.tee_cage_scaling_configs (
    id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    cage_uuid character varying(255) NOT NULL,
    region character varying(255) NOT NULL,
    min_replicas integer NOT NULL,
    max_replicas integer NOT NULL,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone,
    desired_replicas integer DEFAULT 2 NOT NULL
);

--
-- Name: tee_cage_secrets; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.tee_cage_secrets (
    id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    cage_uuid character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    secret text NOT NULL,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone,
    is_secret boolean
);

--
-- Name: tee_cage_signing_certs; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.tee_cage_signing_certs (
    id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    app_uuid character varying(255) NOT NULL,
    cert_hash character varying(255) NOT NULL,
    not_before timestamp with time zone,
    not_after timestamp with time zone,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone,
    name character varying(255)
);

--
-- Name: tee_cage_usage_limits; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.tee_cage_usage_limits (
    id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    team_uuid character varying(255) NOT NULL,
    max_instances integer NOT NULL,
    available_instances integer NOT NULL,
    tier public."cageUsageTier" DEFAULT 'trial'::public."cageUsageTier",
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone
);

--
-- Name: tee_cage_versions; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.tee_cage_versions (
    id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    int_version integer NOT NULL,
    build_status text DEFAULT 'pending'::text,
    control_plane_img_url character varying(255),
    control_plane_version character varying(255),
    data_plane_version character varying(255),
    failure_reason text,
    created_at timestamp with time zone NOT NULL,
    started_at timestamp with time zone,
    updated_at timestamp with time zone,
    eif_size_bytes bigint DEFAULT '-1'::bigint,
    pcr_zero text,
    pcr_one text,
    pcr_two text,
    egress_domains jsonb DEFAULT '[]'::jsonb NOT NULL,
    metadata jsonb,
    cage_uuid character varying(255),
    trusted_headers jsonb DEFAULT '[]'::jsonb NOT NULL,
    healthcheck character varying(255),
    pcrs_signature character varying(255),
    CONSTRAINT tee_cage_versions_build_status_check CHECK ((build_status = ANY (ARRAY['pending'::text, 'building'::text, 'ready'::text, 'failed'::text, '[object Object]'::text])))
);

--
-- Name: tee_cages; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.tee_cages (
    id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    team_uuid character varying(255) NOT NULL,
    app_uuid character varying(255) NOT NULL,
    domain character varying(255) NOT NULL,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    name character varying(255) NOT NULL,
    state public.tee_cage_states DEFAULT 'pending'::public.tee_cage_states,
    is_time_bound boolean DEFAULT false,
    time_to_be_deleted timestamp with time zone,
    disabled boolean DEFAULT false,
    disabled_at timestamp with time zone,
    disabled_reason character varying(255),
    maintenance_window_day_of_week integer DEFAULT 6,
    maintenance_window_hour_of_day integer DEFAULT 3,
    CONSTRAINT maintenance_window_valid_day CHECK (((maintenance_window_day_of_week >= 0) AND (maintenance_window_day_of_week <= 6))),
    CONSTRAINT maintenance_window_valid_hour CHECK (((maintenance_window_hour_of_day >= 0) AND (maintenance_window_hour_of_day <= 23)))
);

--
-- Name: tee_cages_to_signing_certs; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.tee_cages_to_signing_certs (
    id integer NOT NULL,
    app_uuid character varying(255) NOT NULL,
    cage_uuid character varying(255) NOT NULL,
    signing_cert_uuid character varying(255) NOT NULL,
    created_by_user_id integer,
    created_at timestamp with time zone,
    updated_at timestamp with time zone
);

--
-- Name: third_party_integrations; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.third_party_integrations (
    id integer NOT NULL,
    uuid character varying(255) NOT NULL,
    vendor character varying(255) NOT NULL,
    team_uuid character varying(255) NOT NULL,
    oauth_access_token text,
    oauth_access_token_expires_at timestamp with time zone,
    oauth_refresh_token text,
    status character varying(255) NOT NULL,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone,
    metadata jsonb
);

--
-- Name: users; Type: TABLE; Schema: public; Owner: api
--

CREATE TABLE public.users (
    id integer NOT NULL,
    deleted_at timestamp with time zone,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    email character varying(255) NOT NULL,
    role_name public.globalroles DEFAULT 'user'::public.globalroles NOT NULL,
    auth0_id character varying(255),
    reset_token character varying(255),
    reset_token_expires_at timestamp with time zone,
    name character varying(255),
    relay_onboarding boolean DEFAULT true,
    is_deleting boolean,
    secondary_auth0_ids jsonb DEFAULT '[]'::jsonb NOT NULL
);

--
-- Name: api_keys api_keys_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.api_keys
    ADD CONSTRAINT api_keys_pkey PRIMARY KEY (id);


--
-- Name: api_keys api_keys_secret_token_offset_bytes_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.api_keys
    ADD CONSTRAINT api_keys_secret_token_offset_bytes_unique UNIQUE (secret_token, offset_bytes);


--
-- Name: api_keys api_keys_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.api_keys
    ADD CONSTRAINT api_keys_uuid_unique UNIQUE (uuid);


--
-- Name: app_config app_config_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.app_config
    ADD CONSTRAINT app_config_pkey PRIMARY KEY (id);


--
-- Name: app_config app_config_uuid_app_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.app_config
    ADD CONSTRAINT app_config_uuid_app_uuid_unique UNIQUE (uuid, app_uuid);


--
-- Name: apps_outbound_destinations apps_outbound_destinations_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.apps_outbound_destinations
    ADD CONSTRAINT apps_outbound_destinations_pkey PRIMARY KEY (id);


--
-- Name: apps_outbound_destinations apps_outbound_destinations_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.apps_outbound_destinations
    ADD CONSTRAINT apps_outbound_destinations_uuid_unique UNIQUE (uuid);


--
-- Name: apps apps_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.apps
    ADD CONSTRAINT apps_pkey PRIMARY KEY (id);


--
-- Name: blackbox_requests blackbox_requests_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.blackbox_requests
    ADD CONSTRAINT blackbox_requests_pkey PRIMARY KEY (id);


--
-- Name: cage_to_notification cage_to_notification_config_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.cage_to_notification
    ADD CONSTRAINT cage_to_notification_config_unique UNIQUE (cage_uuid, config_id);


--
-- Name: cage_to_notification cage_to_notification_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.cage_to_notification
    ADD CONSTRAINT cage_to_notification_pkey PRIMARY KEY (id);


--
-- Name: cage_whitelisted_ip cage_whitelisted_ip_cage_id_address_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.cage_whitelisted_ip
    ADD CONSTRAINT cage_whitelisted_ip_cage_id_address_unique UNIQUE (cage_id, address);


--
-- Name: cage_whitelisted_ip cage_whitelisted_ip_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.cage_whitelisted_ip
    ADD CONSTRAINT cage_whitelisted_ip_pkey PRIMARY KEY (id);


--
-- Name: cages cages_app_uuid_name_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.cages
    ADD CONSTRAINT cages_app_uuid_name_unique UNIQUE (app_uuid, name);


--
-- Name: cages cages_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.cages
    ADD CONSTRAINT cages_pkey PRIMARY KEY (id);


--
-- Name: cages cages_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.cages
    ADD CONSTRAINT cages_uuid_unique UNIQUE (uuid);


--
-- Name: cages_whitelisted_domains cages_whitelisted_domains_cage_id_domain_name_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.cages_whitelisted_domains
    ADD CONSTRAINT cages_whitelisted_domains_cage_id_domain_name_unique UNIQUE (cage_id, domain_name);


--
-- Name: cages_whitelisted_domains cages_whitelisted_domains_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.cages_whitelisted_domains
    ADD CONSTRAINT cages_whitelisted_domains_pkey PRIMARY KEY (id);


--
-- Name: casbin_rules casbin_rules_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.casbin_rules
    ADD CONSTRAINT casbin_rules_pkey PRIMARY KEY (id);


--
-- Name: data_policies data_policies_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.data_policies
    ADD CONSTRAINT data_policies_pkey PRIMARY KEY (id);


--
-- Name: data_policies data_policies_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.data_policies
    ADD CONSTRAINT data_policies_uuid_unique UNIQUE (uuid);


--
-- Name: data_policy_statements data_policy_statements_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.data_policy_statements
    ADD CONSTRAINT data_policy_statements_pkey PRIMARY KEY (id);


--
-- Name: data_policy_statements data_policy_statements_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.data_policy_statements
    ADD CONSTRAINT data_policy_statements_uuid_unique UNIQUE (uuid);


--
-- Name: data_roles data_roles_app_uuid_slug_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.data_roles
    ADD CONSTRAINT data_roles_app_uuid_slug_unique UNIQUE (app_uuid, slug);


--
-- Name: data_roles data_roles_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.data_roles
    ADD CONSTRAINT data_roles_pkey PRIMARY KEY (id);


--
-- Name: data_roles data_roles_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.data_roles
    ADD CONSTRAINT data_roles_uuid_unique UNIQUE (uuid);


--
-- Name: deployment_regions deployment_regions_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.deployment_regions
    ADD CONSTRAINT deployment_regions_pkey PRIMARY KEY (id);


--
-- Name: deployments deployments_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.deployments
    ADD CONSTRAINT deployments_pkey PRIMARY KEY (id);


--
-- Name: enclave_kernel_refresh_jobs enclave_kernel_refresh_jobs_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.enclave_kernel_refresh_jobs
    ADD CONSTRAINT enclave_kernel_refresh_jobs_pkey PRIMARY KEY (id);


--
-- Name: enclave_kernel_refresh_jobs enclave_kernel_refresh_jobs_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.enclave_kernel_refresh_jobs
    ADD CONSTRAINT enclave_kernel_refresh_jobs_uuid_unique UNIQUE (uuid);


--
-- Name: forms forms_app_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.forms
    ADD CONSTRAINT forms_app_uuid_unique UNIQUE (app_uuid);


--
-- Name: forms forms_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.forms
    ADD CONSTRAINT forms_pkey PRIMARY KEY (id);


--
-- Name: forms forms_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.forms
    ADD CONSTRAINT forms_uuid_unique UNIQUE (uuid);


--
-- Name: function_deployment_regions function_deployment_regions_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.function_deployment_regions
    ADD CONSTRAINT function_deployment_regions_pkey PRIMARY KEY (id);


--
-- Name: function_deployments function_deployments_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.function_deployments
    ADD CONSTRAINT function_deployments_pkey PRIMARY KEY (id);


--
-- Name: function_to_notification function_to_notification_config_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.function_to_notification
    ADD CONSTRAINT function_to_notification_config_unique UNIQUE (function_uuid, config_id);


--
-- Name: function_to_notification function_to_notification_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.function_to_notification
    ADD CONSTRAINT function_to_notification_pkey PRIMARY KEY (id);


--
-- Name: functions_environment_variables functions_environment_variables_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.functions_environment_variables
    ADD CONSTRAINT functions_environment_variables_pkey PRIMARY KEY (id);


--
-- Name: functions_environment_variables functions_environment_variables_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.functions_environment_variables
    ADD CONSTRAINT functions_environment_variables_uuid_unique UNIQUE (uuid);


--
-- Name: functions_inbound_whitelist functions_inbound_whitelist_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.functions_inbound_whitelist
    ADD CONSTRAINT functions_inbound_whitelist_pkey PRIMARY KEY (id);


--
-- Name: functions_outbound_whitelist functions_outbound_whitelist_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.functions_outbound_whitelist
    ADD CONSTRAINT functions_outbound_whitelist_pkey PRIMARY KEY (id);


--
-- Name: functions functions_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.functions
    ADD CONSTRAINT functions_pkey PRIMARY KEY (id);


--
-- Name: functions functions_uuid_app_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.functions
    ADD CONSTRAINT functions_uuid_app_uuid_unique UNIQUE (uuid, app_uuid);


--
-- Name: functions functions_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.functions
    ADD CONSTRAINT functions_uuid_unique UNIQUE (uuid);


--
-- Name: github_repos github_repos_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.github_repos
    ADD CONSTRAINT github_repos_pkey PRIMARY KEY (id);


--
-- Name: relay_to_notification idx_relay_uuid_config_id_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relay_to_notification
    ADD CONSTRAINT idx_relay_uuid_config_id_unique UNIQUE (relay_uuid, config_id);


--
-- Name: inbound_proxies inbound_proxies_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.inbound_proxies
    ADD CONSTRAINT inbound_proxies_pkey PRIMARY KEY (id);


--
-- Name: inbound_proxies inbound_proxies_proxy_hostname_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.inbound_proxies
    ADD CONSTRAINT inbound_proxies_proxy_hostname_unique UNIQUE (proxy_hostname);


--
-- Name: inbound_proxies inbound_proxies_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.inbound_proxies
    ADD CONSTRAINT inbound_proxies_uuid_unique UNIQUE (uuid);


--
-- Name: knex_migrations_lock knex_migrations_lock_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.knex_migrations_lock
    ADD CONSTRAINT knex_migrations_lock_pkey PRIMARY KEY (index);


--
-- Name: knex_migrations knex_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.knex_migrations
    ADD CONSTRAINT knex_migrations_pkey PRIMARY KEY (id);


--
-- Name: local_relays local_relays_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.local_relays
    ADD CONSTRAINT local_relays_pkey PRIMARY KEY (id);


--
-- Name: local_relays local_relays_subdomain_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.local_relays
    ADD CONSTRAINT local_relays_subdomain_unique UNIQUE (subdomain);


--
-- Name: local_relays local_relays_user_id_relay_id_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.local_relays
    ADD CONSTRAINT local_relays_user_id_relay_id_unique UNIQUE (user_id, relay_id);


--
-- Name: metrics_periods metrics_periods_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.metrics_periods
    ADD CONSTRAINT metrics_periods_pkey PRIMARY KEY (id);


--
-- Name: mtls_certificates mtls_certificates_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.mtls_certificates
    ADD CONSTRAINT mtls_certificates_pkey PRIMARY KEY (id);


--
-- Name: mtls_certificates mtls_certificates_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.mtls_certificates
    ADD CONSTRAINT mtls_certificates_uuid_unique UNIQUE (uuid);


--
-- Name: notification_config notification_config_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.notification_config
    ADD CONSTRAINT notification_config_pkey PRIMARY KEY (id);


--
-- Name: rate_limits rate_limits_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.rate_limits
    ADD CONSTRAINT rate_limits_pkey PRIMARY KEY (id);


--
-- Name: rate_limits rate_limits_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.rate_limits
    ADD CONSTRAINT rate_limits_uuid_unique UNIQUE (uuid);


--
-- Name: regional_metrics regional_metrics_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.regional_metrics
    ADD CONSTRAINT regional_metrics_pkey PRIMARY KEY (id);


--
-- Name: relay_actions relay_actions_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relay_actions
    ADD CONSTRAINT relay_actions_pkey PRIMARY KEY (id);


--
-- Name: relay_actions relay_actions_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relay_actions
    ADD CONSTRAINT relay_actions_uuid_unique UNIQUE (uuid);


--
-- Name: relay_custom_domains relay_custom_domains_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relay_custom_domains
    ADD CONSTRAINT relay_custom_domains_pkey PRIMARY KEY (id);


--
-- Name: relay_custom_domains relay_custom_domains_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relay_custom_domains
    ADD CONSTRAINT relay_custom_domains_uuid_unique UNIQUE (uuid);


--
-- Name: relay_data relay_data_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relay_data
    ADD CONSTRAINT relay_data_pkey PRIMARY KEY (id);


--
-- Name: relay_data relay_data_team_uuid_app_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relay_data
    ADD CONSTRAINT relay_data_team_uuid_app_uuid_unique UNIQUE (team_uuid, app_uuid);


--
-- Name: relay_destinations relay_destinations_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relay_destinations
    ADD CONSTRAINT relay_destinations_pkey PRIMARY KEY (id);


--
-- Name: relay_destinations relay_destinations_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relay_destinations
    ADD CONSTRAINT relay_destinations_uuid_unique UNIQUE (uuid);


--
-- Name: relay_outbound_destination relay_outbound_destination_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relay_outbound_destination
    ADD CONSTRAINT relay_outbound_destination_pkey PRIMARY KEY (id);


--
-- Name: relay_outbound_destination relay_outbound_destination_team_uuid_destination_domain_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relay_outbound_destination
    ADD CONSTRAINT relay_outbound_destination_team_uuid_destination_domain_unique UNIQUE (team_uuid, destination_domain);


--
-- Name: relay_selections relay_selections_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relay_selections
    ADD CONSTRAINT relay_selections_pkey PRIMARY KEY (id);


--
-- Name: relay_selections relay_selections_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relay_selections
    ADD CONSTRAINT relay_selections_uuid_unique UNIQUE (uuid);


--
-- Name: relay_to_notification relay_to_notification_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relay_to_notification
    ADD CONSTRAINT relay_to_notification_pkey PRIMARY KEY (id);


--
-- Name: relays relay_uuid_key; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relays
    ADD CONSTRAINT relay_uuid_key UNIQUE (uuid);


--
-- Name: relays relays_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relays
    ADD CONSTRAINT relays_pkey PRIMARY KEY (id);


--
-- Name: roles roles_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.roles
    ADD CONSTRAINT roles_pkey PRIMARY KEY (id);


--
-- Name: sandbox_requests sandbox_requests_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.sandbox_requests
    ADD CONSTRAINT sandbox_requests_pkey PRIMARY KEY (id);


--
-- Name: scoped_api_key_grants scoped_api_key_grants_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.scoped_api_key_grants
    ADD CONSTRAINT scoped_api_key_grants_pkey PRIMARY KEY (id);


--
-- Name: scoped_api_key_grants scoped_api_key_grants_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.scoped_api_key_grants
    ADD CONSTRAINT scoped_api_key_grants_uuid_unique UNIQUE (uuid);


--
-- Name: scoped_api_keys scoped_api_keys_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.scoped_api_keys
    ADD CONSTRAINT scoped_api_keys_pkey PRIMARY KEY (id);


--
-- Name: scoped_api_keys scoped_api_keys_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.scoped_api_keys
    ADD CONSTRAINT scoped_api_keys_uuid_unique UNIQUE (uuid);


--
-- Name: team_aws_details team_cage_keys_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.team_aws_details
    ADD CONSTRAINT team_cage_keys_pkey PRIMARY KEY (id);


--
-- Name: team_aws_details team_cage_keys_team_id_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.team_aws_details
    ADD CONSTRAINT team_cage_keys_team_id_unique UNIQUE (team_id);


--
-- Name: team_data_schemas team_data_schemas_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.team_data_schemas
    ADD CONSTRAINT team_data_schemas_pkey PRIMARY KEY (id);


--
-- Name: team_invites team_invites_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.team_invites
    ADD CONSTRAINT team_invites_pkey PRIMARY KEY (id);


--
-- Name: team_invites team_invites_uuid_key; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.team_invites
    ADD CONSTRAINT team_invites_uuid_key UNIQUE (uuid);


--
-- Name: teams teams_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.teams
    ADD CONSTRAINT teams_pkey PRIMARY KEY (id);


--
-- Name: teams_to_users teams_to_users_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.teams_to_users
    ADD CONSTRAINT teams_to_users_pkey PRIMARY KEY (id);


--
-- Name: teams_to_users teams_to_users_team_id_user_id_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.teams_to_users
    ADD CONSTRAINT teams_to_users_team_id_user_id_unique UNIQUE (team_id, user_id);


--
-- Name: teams teams_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.teams
    ADD CONSTRAINT teams_uuid_unique UNIQUE (uuid);


--
-- Name: tee_cage_deployments tee_cage_deployments_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cage_deployments
    ADD CONSTRAINT tee_cage_deployments_pkey PRIMARY KEY (id);


--
-- Name: tee_cage_deployments tee_cage_deployments_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cage_deployments
    ADD CONSTRAINT tee_cage_deployments_uuid_unique UNIQUE (uuid);


--
-- Name: tee_cage_regional_deployments tee_cage_regional_deployments_deployment_uuid_deployment_order_; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cage_regional_deployments
    ADD CONSTRAINT tee_cage_regional_deployments_deployment_uuid_deployment_order_ UNIQUE (deployment_uuid, deployment_order);


--
-- Name: tee_cage_regional_deployments tee_cage_regional_deployments_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cage_regional_deployments
    ADD CONSTRAINT tee_cage_regional_deployments_pkey PRIMARY KEY (id);


--
-- Name: tee_cage_regional_deployments tee_cage_regional_deployments_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cage_regional_deployments
    ADD CONSTRAINT tee_cage_regional_deployments_uuid_unique UNIQUE (uuid);


--
-- Name: tee_cage_scaling_configs tee_cage_scaling_configs_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cage_scaling_configs
    ADD CONSTRAINT tee_cage_scaling_configs_pkey PRIMARY KEY (id);


--
-- Name: tee_cage_scaling_configs tee_cage_scaling_configs_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cage_scaling_configs
    ADD CONSTRAINT tee_cage_scaling_configs_uuid_unique UNIQUE (uuid);


--
-- Name: tee_cage_secrets tee_cage_secrets_cage_uuid_name_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cage_secrets
    ADD CONSTRAINT tee_cage_secrets_cage_uuid_name_unique UNIQUE (cage_uuid, name);


--
-- Name: tee_cage_secrets tee_cage_secrets_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cage_secrets
    ADD CONSTRAINT tee_cage_secrets_pkey PRIMARY KEY (id);


--
-- Name: tee_cage_secrets tee_cage_secrets_uuid_key; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cage_secrets
    ADD CONSTRAINT tee_cage_secrets_uuid_key UNIQUE (uuid);


--
-- Name: tee_cage_signing_certs tee_cage_signing_certs_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cage_signing_certs
    ADD CONSTRAINT tee_cage_signing_certs_pkey PRIMARY KEY (id);


--
-- Name: tee_cage_signing_certs tee_cage_signing_certs_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cage_signing_certs
    ADD CONSTRAINT tee_cage_signing_certs_uuid_unique UNIQUE (uuid);


--
-- Name: tee_cage_usage_limits tee_cage_usage_limits_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cage_usage_limits
    ADD CONSTRAINT tee_cage_usage_limits_pkey PRIMARY KEY (id);


--
-- Name: tee_cage_usage_limits tee_cage_usage_limits_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cage_usage_limits
    ADD CONSTRAINT tee_cage_usage_limits_uuid_unique UNIQUE (uuid);


--
-- Name: tee_cage_versions tee_cage_versions_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cage_versions
    ADD CONSTRAINT tee_cage_versions_pkey PRIMARY KEY (id);


--
-- Name: tee_cage_versions tee_cage_versions_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cage_versions
    ADD CONSTRAINT tee_cage_versions_uuid_unique UNIQUE (uuid);


--
-- Name: tee_cages tee_cages_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cages
    ADD CONSTRAINT tee_cages_pkey PRIMARY KEY (id);


--
-- Name: tee_cages_to_signing_certs tee_cages_to_signing_certs_cage_uuid_signing_cert_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cages_to_signing_certs
    ADD CONSTRAINT tee_cages_to_signing_certs_cage_uuid_signing_cert_uuid_unique UNIQUE (cage_uuid, signing_cert_uuid);


--
-- Name: tee_cages_to_signing_certs tee_cages_to_signing_certs_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cages_to_signing_certs
    ADD CONSTRAINT tee_cages_to_signing_certs_pkey PRIMARY KEY (id);


--
-- Name: tee_cages tee_cages_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cages
    ADD CONSTRAINT tee_cages_uuid_unique UNIQUE (uuid);


--
-- Name: third_party_integrations third_party_integrations_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.third_party_integrations
    ADD CONSTRAINT third_party_integrations_pkey PRIMARY KEY (id);


--
-- Name: third_party_integrations third_party_integrations_uuid_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.third_party_integrations
    ADD CONSTRAINT third_party_integrations_uuid_unique UNIQUE (uuid);


--
-- Name: metrics_periods unique_metrics_time_period; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.metrics_periods
    ADD CONSTRAINT unique_metrics_time_period UNIQUE (started_at, ended_at);


--
-- Name: regional_metrics unique_regional_metrics_per_team_per_region; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.regional_metrics
    ADD CONSTRAINT unique_regional_metrics_per_team_per_region UNIQUE (team_uuid, metrics_periods_id, region);


--
-- Name: apps unique_uuid_per_app; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.apps
    ADD CONSTRAINT unique_uuid_per_app UNIQUE (uuid);


--
-- Name: app_config unique_uuid_per_app_config; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.app_config
    ADD CONSTRAINT unique_uuid_per_app_config UNIQUE (uuid);


--
-- Name: users users_auth0_id_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_auth0_id_unique UNIQUE (auth0_id);


--
-- Name: users users_email_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_email_unique UNIQUE (email);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: users users_reset_token_unique; Type: CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_reset_token_unique UNIQUE (reset_token);


--
-- Name: apps_team_uuid_name_unique_not_deleted; Type: INDEX; Schema: public; Owner: api
--

CREATE UNIQUE INDEX apps_team_uuid_name_unique_not_deleted ON public.apps USING btree (team_uuid, name) WHERE (deleted_at IS NULL);


--
-- Name: cages_team_id_uuid_index; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX cages_team_id_uuid_index ON public.cages USING btree (team_id, uuid);


--
-- Name: casbin_rules_ptype_index; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX casbin_rules_ptype_index ON public.casbin_rules USING btree (ptype);


--
-- Name: casbin_rules_v0_index; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX casbin_rules_v0_index ON public.casbin_rules USING btree (v0);


--
-- Name: casbin_rules_v1_index; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX casbin_rules_v1_index ON public.casbin_rules USING btree (v1);


--
-- Name: casbin_rules_v2_index; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX casbin_rules_v2_index ON public.casbin_rules USING btree (v2);


--
-- Name: casbin_rules_v3_index; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX casbin_rules_v3_index ON public.casbin_rules USING btree (v3);


--
-- Name: casbin_rules_v4_index; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX casbin_rules_v4_index ON public.casbin_rules USING btree (v4);


--
-- Name: casbin_rules_v5_index; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX casbin_rules_v5_index ON public.casbin_rules USING btree (v5);


--
-- Name: deployment_regions_deployment_id_region_index; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX deployment_regions_deployment_id_region_index ON public.deployment_regions USING btree (deployment_id, region);


--
-- Name: function_deployment_regions_deployment_id_region_index; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX function_deployment_regions_deployment_id_region_index ON public.function_deployment_regions USING btree (deployment_id, region);


--
-- Name: function_deployments_type_index; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX function_deployments_type_index ON public.function_deployments USING btree (type);


--
-- Name: functions_app_uuid_name_unique_not_deleted; Type: INDEX; Schema: public; Owner: api
--

CREATE UNIQUE INDEX functions_app_uuid_name_unique_not_deleted ON public.functions USING btree (app_uuid, name) WHERE (deleted_at IS NULL);


--
-- Name: functions_environment_variables_function_uuid_key_unique_not_de; Type: INDEX; Schema: public; Owner: api
--

CREATE UNIQUE INDEX functions_environment_variables_function_uuid_key_unique_not_de ON public.functions_environment_variables USING btree (function_uuid, key) WHERE (deleted_at IS NULL);


--
-- Name: github_repos_app_id_repo_name_directory_unique_not_deleted; Type: INDEX; Schema: public; Owner: api
--

CREATE UNIQUE INDEX github_repos_app_id_repo_name_directory_unique_not_deleted ON public.github_repos USING btree (app_id, repo_name, directory) WHERE (deleted_at IS NULL);


--
-- Name: github_repos_installation_id_disabled_index; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX github_repos_installation_id_disabled_index ON public.github_repos USING btree (installation_id, disabled);


--
-- Name: github_repos_node_id_index; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX github_repos_node_id_index ON public.github_repos USING btree (node_id);


--
-- Name: idx_api_keys_team_id; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX idx_api_keys_team_id ON public.api_keys USING btree (team_id);


--
-- Name: inbound_proxies_team_id_proxy_hostname_index; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX inbound_proxies_team_id_proxy_hostname_index ON public.inbound_proxies USING btree (team_id, proxy_hostname);


--
-- Name: local_relays_subdomain_index; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX local_relays_subdomain_index ON public.local_relays USING btree (subdomain);


--
-- Name: local_relays_user_id_index; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX local_relays_user_id_index ON public.local_relays USING btree (user_id);


--
-- Name: relay_data_app_uuid_index; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX relay_data_app_uuid_index ON public.relay_data USING btree (app_uuid);


--
-- Name: relay_data_team_uuid_index; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX relay_data_team_uuid_index ON public.relay_data USING btree (team_uuid);


--
-- Name: relay_destinations_evervault_domain_unique_not_deleted; Type: INDEX; Schema: public; Owner: api
--

CREATE UNIQUE INDEX relay_destinations_evervault_domain_unique_not_deleted ON public.relay_destinations USING btree (evervault_domain) WHERE (deleted_at IS NULL);


--
-- Name: relays_team_uuid_index; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX relays_team_uuid_index ON public.relays USING btree (team_uuid);


--
-- Name: team_data_schemas_team_id_hostname_index; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX team_data_schemas_team_id_hostname_index ON public.team_data_schemas USING btree (team_id, hostname);


--
-- Name: team_invites_email_team_id_unique_not_deleted; Type: INDEX; Schema: public; Owner: api
--

CREATE UNIQUE INDEX team_invites_email_team_id_unique_not_deleted ON public.team_invites USING btree (email, team_id) WHERE (deleted_at IS NULL);


--
-- Name: team_invites_invited_by_id_index; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX team_invites_invited_by_id_index ON public.team_invites USING btree (invited_by_id);


--
-- Name: team_invites_team_id_index; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX team_invites_team_id_index ON public.team_invites USING btree (team_id);


--
-- Name: teams_name_index; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX teams_name_index ON public.teams USING btree (name);


--
-- Name: tee_cage_usage_limits_team_uuid_unique_not_deleted; Type: INDEX; Schema: public; Owner: api
--

CREATE UNIQUE INDEX tee_cage_usage_limits_team_uuid_unique_not_deleted ON public.tee_cage_usage_limits USING btree (team_uuid) WHERE (deleted_at IS NULL);


--
-- Name: tee_cages_app_uuid_index; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX tee_cages_app_uuid_index ON public.tee_cages USING btree (app_uuid);


--
-- Name: tee_cages_uuid_index; Type: INDEX; Schema: public; Owner: api
--

CREATE INDEX tee_cages_uuid_index ON public.tee_cages USING btree (uuid);


--
-- Name: third_party_integrations_team_uuid_vendor_unique_not_deleted; Type: INDEX; Schema: public; Owner: api
--

CREATE UNIQUE INDEX third_party_integrations_team_uuid_vendor_unique_not_deleted ON public.third_party_integrations USING btree (team_uuid, vendor) WHERE (deleted_at IS NULL);


--
-- Name: unique_domain_not_deleted; Type: INDEX; Schema: public; Owner: api
--

CREATE UNIQUE INDEX unique_domain_not_deleted ON public.relays USING btree (domain) WHERE (deleted_at IS NULL);


--
-- Name: unique_inbound_whitelist_entry_not_deleted; Type: INDEX; Schema: public; Owner: api
--

CREATE UNIQUE INDEX unique_inbound_whitelist_entry_not_deleted ON public.functions_inbound_whitelist USING btree (function_uuid, address) WHERE (deleted_at IS NULL);


--
-- Name: unique_outbound_whitelist_entry_not_deleted; Type: INDEX; Schema: public; Owner: api
--

CREATE UNIQUE INDEX unique_outbound_whitelist_entry_not_deleted ON public.functions_outbound_whitelist USING btree (function_uuid, domain_name) WHERE (deleted_at IS NULL);


--
-- Name: function_deployment_regions try_update_deployment_status; Type: TRIGGER; Schema: public; Owner: api
--

CREATE TRIGGER try_update_deployment_status AFTER UPDATE ON public.function_deployment_regions FOR EACH ROW WHEN ((new.status = 'deployed'::public.function_region_status)) EXECUTE FUNCTION public.update_deployment_if_all_regional_deployments_complete();


--
-- Name: api_keys api_keys_app_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.api_keys
    ADD CONSTRAINT api_keys_app_uuid_foreign FOREIGN KEY (app_uuid) REFERENCES public.apps(uuid) ON DELETE CASCADE;


--
-- Name: api_keys api_keys_team_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.api_keys
    ADD CONSTRAINT api_keys_team_id_foreign FOREIGN KEY (team_id) REFERENCES public.teams(id) ON DELETE CASCADE;


--
-- Name: app_config app_config_app_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.app_config
    ADD CONSTRAINT app_config_app_uuid_foreign FOREIGN KEY (app_uuid) REFERENCES public.apps(uuid) ON DELETE CASCADE;


--
-- Name: apps_outbound_destinations apps_outbound_destinations_app_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.apps_outbound_destinations
    ADD CONSTRAINT apps_outbound_destinations_app_uuid_foreign FOREIGN KEY (app_uuid) REFERENCES public.apps(uuid) ON DELETE CASCADE;


--
-- Name: apps_outbound_destinations apps_outbound_destinations_relay_outbound_destination_id_foreig; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.apps_outbound_destinations
    ADD CONSTRAINT apps_outbound_destinations_relay_outbound_destination_id_foreig FOREIGN KEY (relay_outbound_destination_id) REFERENCES public.relay_outbound_destination(id) ON DELETE CASCADE;


--
-- Name: apps apps_team_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.apps
    ADD CONSTRAINT apps_team_uuid_foreign FOREIGN KEY (team_uuid) REFERENCES public.teams(uuid) ON DELETE CASCADE;


--
-- Name: blackbox_requests blackbox_requests_user_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.blackbox_requests
    ADD CONSTRAINT blackbox_requests_user_id_foreign FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: cage_to_notification cage_to_notification_cage_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.cage_to_notification
    ADD CONSTRAINT cage_to_notification_cage_uuid_foreign FOREIGN KEY (cage_uuid) REFERENCES public.cages(uuid) ON DELETE CASCADE;


--
-- Name: cage_to_notification cage_to_notification_config_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.cage_to_notification
    ADD CONSTRAINT cage_to_notification_config_id_foreign FOREIGN KEY (config_id) REFERENCES public.notification_config(id) ON DELETE CASCADE;


--
-- Name: cage_whitelisted_ip cage_whitelisted_ip_cage_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.cage_whitelisted_ip
    ADD CONSTRAINT cage_whitelisted_ip_cage_id_foreign FOREIGN KEY (cage_id) REFERENCES public.cages(id) ON DELETE CASCADE;


--
-- Name: cages cages_app_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.cages
    ADD CONSTRAINT cages_app_uuid_foreign FOREIGN KEY (app_uuid) REFERENCES public.apps(uuid) ON DELETE CASCADE;


--
-- Name: cages cages_team_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.cages
    ADD CONSTRAINT cages_team_id_foreign FOREIGN KEY (team_id) REFERENCES public.teams(id) ON DELETE SET NULL;


--
-- Name: cages_whitelisted_domains cages_whitelisted_domains_cage_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.cages_whitelisted_domains
    ADD CONSTRAINT cages_whitelisted_domains_cage_id_foreign FOREIGN KEY (cage_id) REFERENCES public.cages(id);


--
-- Name: data_policies data_policies_app_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.data_policies
    ADD CONSTRAINT data_policies_app_uuid_foreign FOREIGN KEY (app_uuid) REFERENCES public.apps(uuid) ON DELETE CASCADE;


--
-- Name: data_policies data_policies_data_role_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.data_policies
    ADD CONSTRAINT data_policies_data_role_uuid_foreign FOREIGN KEY (data_role_uuid) REFERENCES public.data_roles(uuid) ON DELETE CASCADE;


--
-- Name: data_policy_statements data_policy_statements_app_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.data_policy_statements
    ADD CONSTRAINT data_policy_statements_app_uuid_foreign FOREIGN KEY (app_uuid) REFERENCES public.apps(uuid) ON DELETE CASCADE;


--
-- Name: data_policy_statements data_policy_statements_data_role_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.data_policy_statements
    ADD CONSTRAINT data_policy_statements_data_role_uuid_foreign FOREIGN KEY (data_role_uuid) REFERENCES public.data_roles(uuid) ON DELETE CASCADE;


--
-- Name: data_roles data_roles_app_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.data_roles
    ADD CONSTRAINT data_roles_app_uuid_foreign FOREIGN KEY (app_uuid) REFERENCES public.apps(uuid) ON DELETE CASCADE;


--
-- Name: deployment_regions deployment_regions_deployment_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.deployment_regions
    ADD CONSTRAINT deployment_regions_deployment_id_foreign FOREIGN KEY (deployment_id) REFERENCES public.deployments(id) ON DELETE CASCADE;


--
-- Name: deployments deployments_cage_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.deployments
    ADD CONSTRAINT deployments_cage_id_foreign FOREIGN KEY (cage_id) REFERENCES public.cages(id) ON DELETE CASCADE;


--
-- Name: deployments deployments_deployed_by_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.deployments
    ADD CONSTRAINT deployments_deployed_by_id_foreign FOREIGN KEY (deployed_by_id) REFERENCES public.users(id) ON DELETE SET NULL;


--
-- Name: deployments deployments_deployed_by_team_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.deployments
    ADD CONSTRAINT deployments_deployed_by_team_id_foreign FOREIGN KEY (deployed_by_team_id) REFERENCES public.teams(id) ON DELETE CASCADE;


--
-- Name: enclave_kernel_refresh_jobs enclave_kernel_refresh_jobs_enclave_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.enclave_kernel_refresh_jobs
    ADD CONSTRAINT enclave_kernel_refresh_jobs_enclave_uuid_foreign FOREIGN KEY (enclave_uuid) REFERENCES public.tee_cages(uuid);


--
-- Name: forms forms_app_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.forms
    ADD CONSTRAINT forms_app_uuid_foreign FOREIGN KEY (app_uuid) REFERENCES public.apps(uuid) ON DELETE CASCADE;


--
-- Name: function_deployment_regions function_deployment_regions_deployment_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.function_deployment_regions
    ADD CONSTRAINT function_deployment_regions_deployment_id_foreign FOREIGN KEY (deployment_id) REFERENCES public.function_deployments(id) ON DELETE CASCADE;


--
-- Name: function_deployments function_deployments_deployed_by_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.function_deployments
    ADD CONSTRAINT function_deployments_deployed_by_id_foreign FOREIGN KEY (deployed_by_id) REFERENCES public.users(id) ON DELETE SET NULL;


--
-- Name: function_deployments function_deployments_deployed_by_team_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.function_deployments
    ADD CONSTRAINT function_deployments_deployed_by_team_id_foreign FOREIGN KEY (deployed_by_team_id) REFERENCES public.teams(id) ON DELETE SET NULL;


--
-- Name: function_deployments function_deployments_function_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.function_deployments
    ADD CONSTRAINT function_deployments_function_uuid_foreign FOREIGN KEY (function_uuid) REFERENCES public.functions(uuid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: function_to_notification function_to_notification_config_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.function_to_notification
    ADD CONSTRAINT function_to_notification_config_id_foreign FOREIGN KEY (config_id) REFERENCES public.notification_config(id) ON DELETE CASCADE;


--
-- Name: function_to_notification function_to_notification_function_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.function_to_notification
    ADD CONSTRAINT function_to_notification_function_uuid_foreign FOREIGN KEY (function_uuid) REFERENCES public.functions(uuid) ON DELETE CASCADE;


--
-- Name: functions functions_app_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.functions
    ADD CONSTRAINT functions_app_uuid_foreign FOREIGN KEY (app_uuid) REFERENCES public.apps(uuid) ON DELETE CASCADE;


--
-- Name: functions_environment_variables functions_environment_variables_function_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.functions_environment_variables
    ADD CONSTRAINT functions_environment_variables_function_uuid_foreign FOREIGN KEY (function_uuid) REFERENCES public.functions(uuid) ON DELETE CASCADE;


--
-- Name: functions_inbound_whitelist functions_inbound_whitelist_function_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.functions_inbound_whitelist
    ADD CONSTRAINT functions_inbound_whitelist_function_uuid_foreign FOREIGN KEY (function_uuid) REFERENCES public.functions(uuid) ON DELETE CASCADE;


--
-- Name: functions_outbound_whitelist functions_outbound_whitelist_function_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.functions_outbound_whitelist
    ADD CONSTRAINT functions_outbound_whitelist_function_uuid_foreign FOREIGN KEY (function_uuid) REFERENCES public.functions(uuid) ON DELETE CASCADE;


--
-- Name: functions functions_team_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.functions
    ADD CONSTRAINT functions_team_uuid_foreign FOREIGN KEY (team_uuid) REFERENCES public.teams(uuid);


--
-- Name: github_repos github_repos_cage_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.github_repos
    ADD CONSTRAINT github_repos_cage_id_foreign FOREIGN KEY (cage_id) REFERENCES public.cages(id) ON DELETE CASCADE;


--
-- Name: github_repos github_repos_function_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.github_repos
    ADD CONSTRAINT github_repos_function_id_foreign FOREIGN KEY (function_id) REFERENCES public.functions(id) ON DELETE SET NULL;


--
-- Name: github_repos github_repos_team_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.github_repos
    ADD CONSTRAINT github_repos_team_id_foreign FOREIGN KEY (team_id) REFERENCES public.teams(id) ON DELETE CASCADE;


--
-- Name: inbound_proxies inbound_proxies_team_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.inbound_proxies
    ADD CONSTRAINT inbound_proxies_team_id_foreign FOREIGN KEY (team_id) REFERENCES public.teams(id);


--
-- Name: local_relays local_relays_relay_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.local_relays
    ADD CONSTRAINT local_relays_relay_id_foreign FOREIGN KEY (relay_id) REFERENCES public.relays(id) ON DELETE CASCADE;


--
-- Name: local_relays local_relays_user_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.local_relays
    ADD CONSTRAINT local_relays_user_id_foreign FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: mtls_certificates mtls_certificates_relay_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.mtls_certificates
    ADD CONSTRAINT mtls_certificates_relay_uuid_foreign FOREIGN KEY (relay_uuid) REFERENCES public.relays(uuid) ON DELETE CASCADE;


--
-- Name: notification_config notification_config_app_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.notification_config
    ADD CONSTRAINT notification_config_app_uuid_foreign FOREIGN KEY (app_uuid) REFERENCES public.apps(uuid) ON DELETE CASCADE;


--
-- Name: notification_config notification_config_team_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.notification_config
    ADD CONSTRAINT notification_config_team_uuid_foreign FOREIGN KEY (team_uuid) REFERENCES public.teams(uuid) ON DELETE CASCADE;


--
-- Name: rate_limits rate_limits_team_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.rate_limits
    ADD CONSTRAINT rate_limits_team_uuid_foreign FOREIGN KEY (team_uuid) REFERENCES public.teams(uuid) ON DELETE CASCADE;


--
-- Name: regional_metrics regional_metrics_metrics_periods_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.regional_metrics
    ADD CONSTRAINT regional_metrics_metrics_periods_id_foreign FOREIGN KEY (metrics_periods_id) REFERENCES public.metrics_periods(id) ON DELETE CASCADE;


--
-- Name: regional_metrics regional_metrics_team_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.regional_metrics
    ADD CONSTRAINT regional_metrics_team_uuid_foreign FOREIGN KEY (team_uuid) REFERENCES public.teams(uuid) ON DELETE CASCADE;


--
-- Name: relay_actions relay_actions_relay_destination_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relay_actions
    ADD CONSTRAINT relay_actions_relay_destination_uuid_foreign FOREIGN KEY (relay_destination_uuid) REFERENCES public.relay_destinations(uuid) ON DELETE CASCADE;


--
-- Name: relay_custom_domains relay_custom_domains_relay_destination_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relay_custom_domains
    ADD CONSTRAINT relay_custom_domains_relay_destination_uuid_foreign FOREIGN KEY (relay_destination_uuid) REFERENCES public.relay_destinations(uuid) ON DELETE CASCADE;


--
-- Name: relay_data relay_data_app_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relay_data
    ADD CONSTRAINT relay_data_app_uuid_foreign FOREIGN KEY (app_uuid) REFERENCES public.apps(uuid) ON DELETE CASCADE;


--
-- Name: relay_data relay_data_team_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relay_data
    ADD CONSTRAINT relay_data_team_uuid_foreign FOREIGN KEY (team_uuid) REFERENCES public.teams(uuid) ON DELETE CASCADE;


--
-- Name: relay_destinations relay_destinations_app_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relay_destinations
    ADD CONSTRAINT relay_destinations_app_uuid_foreign FOREIGN KEY (app_uuid) REFERENCES public.apps(uuid) ON DELETE CASCADE;


--
-- Name: relay_outbound_destination relay_outbound_destination_team_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relay_outbound_destination
    ADD CONSTRAINT relay_outbound_destination_team_uuid_foreign FOREIGN KEY (team_uuid) REFERENCES public.teams(uuid) ON DELETE CASCADE;


--
-- Name: relay_selections relay_selections_relay_action_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relay_selections
    ADD CONSTRAINT relay_selections_relay_action_uuid_foreign FOREIGN KEY (relay_action_uuid) REFERENCES public.relay_actions(uuid) ON DELETE CASCADE;


--
-- Name: relay_selections relay_selections_role_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relay_selections
    ADD CONSTRAINT relay_selections_role_uuid_foreign FOREIGN KEY (role_uuid) REFERENCES public.data_roles(uuid) ON DELETE CASCADE;


--
-- Name: relay_to_notification relay_to_notification_config_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relay_to_notification
    ADD CONSTRAINT relay_to_notification_config_id_foreign FOREIGN KEY (config_id) REFERENCES public.notification_config(id) ON DELETE CASCADE;


--
-- Name: relay_to_notification relay_to_notification_relay_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relay_to_notification
    ADD CONSTRAINT relay_to_notification_relay_uuid_foreign FOREIGN KEY (relay_uuid) REFERENCES public.relays(uuid) ON DELETE CASCADE;


--
-- Name: relays relays_app_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relays
    ADD CONSTRAINT relays_app_uuid_foreign FOREIGN KEY (app_uuid) REFERENCES public.apps(uuid) ON DELETE CASCADE;


--
-- Name: relays relays_team_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.relays
    ADD CONSTRAINT relays_team_uuid_foreign FOREIGN KEY (team_uuid) REFERENCES public.teams(uuid) ON DELETE CASCADE;


--
-- Name: sandbox_requests sandbox_requests_user_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.sandbox_requests
    ADD CONSTRAINT sandbox_requests_user_id_foreign FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: scoped_api_key_grants scoped_api_key_grants_api_key_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.scoped_api_key_grants
    ADD CONSTRAINT scoped_api_key_grants_api_key_uuid_foreign FOREIGN KEY (api_key_uuid) REFERENCES public.scoped_api_keys(uuid) ON DELETE CASCADE;


--
-- Name: scoped_api_keys scoped_api_keys_app_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.scoped_api_keys
    ADD CONSTRAINT scoped_api_keys_app_uuid_foreign FOREIGN KEY (app_uuid) REFERENCES public.apps(uuid) ON DELETE CASCADE;


--
-- Name: team_aws_details team_cage_keys_team_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.team_aws_details
    ADD CONSTRAINT team_cage_keys_team_id_foreign FOREIGN KEY (team_id) REFERENCES public.teams(id);


--
-- Name: team_data_schemas team_data_schemas_team_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.team_data_schemas
    ADD CONSTRAINT team_data_schemas_team_id_foreign FOREIGN KEY (team_id) REFERENCES public.teams(id);


--
-- Name: team_invites team_invites_invitee_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.team_invites
    ADD CONSTRAINT team_invites_invitee_id_foreign FOREIGN KEY (invitee_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: team_invites team_invites_role_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.team_invites
    ADD CONSTRAINT team_invites_role_id_foreign FOREIGN KEY (role_id) REFERENCES public.roles(id) ON DELETE SET NULL;


--
-- Name: team_invites team_invites_team_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.team_invites
    ADD CONSTRAINT team_invites_team_id_foreign FOREIGN KEY (team_id) REFERENCES public.teams(id) ON DELETE CASCADE;


--
-- Name: team_invites team_invites_user_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.team_invites
    ADD CONSTRAINT team_invites_user_id_foreign FOREIGN KEY (invited_by_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: teams_to_users teams_to_users_team_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.teams_to_users
    ADD CONSTRAINT teams_to_users_team_id_foreign FOREIGN KEY (team_id) REFERENCES public.teams(id) ON DELETE SET NULL;


--
-- Name: teams_to_users teams_to_users_user_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.teams_to_users
    ADD CONSTRAINT teams_to_users_user_id_foreign FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: teams_to_users teams_to_users_user_role_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.teams_to_users
    ADD CONSTRAINT teams_to_users_user_role_id_foreign FOREIGN KEY (user_role_id) REFERENCES public.roles(id) ON DELETE SET NULL;


--
-- Name: tee_cage_deployments tee_cage_deployments_cage_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cage_deployments
    ADD CONSTRAINT tee_cage_deployments_cage_uuid_foreign FOREIGN KEY (cage_uuid) REFERENCES public.tee_cages(uuid) ON DELETE CASCADE;


--
-- Name: tee_cage_deployments tee_cage_deployments_signing_cert_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cage_deployments
    ADD CONSTRAINT tee_cage_deployments_signing_cert_uuid_foreign FOREIGN KEY (signing_cert_uuid) REFERENCES public.tee_cage_signing_certs(uuid) ON DELETE CASCADE;


--
-- Name: tee_cage_deployments tee_cage_deployments_version_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cage_deployments
    ADD CONSTRAINT tee_cage_deployments_version_uuid_foreign FOREIGN KEY (version_uuid) REFERENCES public.tee_cage_versions(uuid) ON DELETE CASCADE;


--
-- Name: tee_cage_regional_deployments tee_cage_regional_deployments_deployment_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cage_regional_deployments
    ADD CONSTRAINT tee_cage_regional_deployments_deployment_uuid_foreign FOREIGN KEY (deployment_uuid) REFERENCES public.tee_cage_deployments(uuid) ON DELETE CASCADE;


--
-- Name: tee_cage_scaling_configs tee_cage_scaling_configs_cage_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cage_scaling_configs
    ADD CONSTRAINT tee_cage_scaling_configs_cage_uuid_foreign FOREIGN KEY (cage_uuid) REFERENCES public.tee_cages(uuid) ON DELETE CASCADE;


--
-- Name: tee_cage_secrets tee_cage_secrets_cage_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cage_secrets
    ADD CONSTRAINT tee_cage_secrets_cage_uuid_foreign FOREIGN KEY (cage_uuid) REFERENCES public.tee_cages(uuid) ON DELETE CASCADE;


--
-- Name: tee_cage_signing_certs tee_cage_signing_certs_app_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cage_signing_certs
    ADD CONSTRAINT tee_cage_signing_certs_app_uuid_foreign FOREIGN KEY (app_uuid) REFERENCES public.apps(uuid) ON DELETE CASCADE;


--
-- Name: tee_cage_usage_limits tee_cage_usage_limits_team_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cage_usage_limits
    ADD CONSTRAINT tee_cage_usage_limits_team_uuid_foreign FOREIGN KEY (team_uuid) REFERENCES public.teams(uuid) ON DELETE CASCADE;


--
-- Name: tee_cages tee_cages_app_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cages
    ADD CONSTRAINT tee_cages_app_uuid_foreign FOREIGN KEY (app_uuid) REFERENCES public.apps(uuid) ON DELETE CASCADE;


--
-- Name: tee_cages tee_cages_team_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cages
    ADD CONSTRAINT tee_cages_team_uuid_foreign FOREIGN KEY (team_uuid) REFERENCES public.teams(uuid) ON DELETE CASCADE;


--
-- Name: tee_cages_to_signing_certs tee_cages_to_signing_certs_app_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cages_to_signing_certs
    ADD CONSTRAINT tee_cages_to_signing_certs_app_uuid_foreign FOREIGN KEY (app_uuid) REFERENCES public.apps(uuid) ON DELETE CASCADE;


--
-- Name: tee_cages_to_signing_certs tee_cages_to_signing_certs_cage_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cages_to_signing_certs
    ADD CONSTRAINT tee_cages_to_signing_certs_cage_uuid_foreign FOREIGN KEY (cage_uuid) REFERENCES public.tee_cages(uuid) ON DELETE CASCADE;


--
-- Name: tee_cages_to_signing_certs tee_cages_to_signing_certs_created_by_user_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cages_to_signing_certs
    ADD CONSTRAINT tee_cages_to_signing_certs_created_by_user_id_foreign FOREIGN KEY (created_by_user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: tee_cages_to_signing_certs tee_cages_to_signing_certs_signing_cert_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.tee_cages_to_signing_certs
    ADD CONSTRAINT tee_cages_to_signing_certs_signing_cert_uuid_foreign FOREIGN KEY (signing_cert_uuid) REFERENCES public.tee_cage_signing_certs(uuid) ON DELETE CASCADE;


--
-- Name: third_party_integrations third_party_integrations_team_uuid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: api
--

ALTER TABLE ONLY public.third_party_integrations
    ADD CONSTRAINT third_party_integrations_team_uuid_foreign FOREIGN KEY (team_uuid) REFERENCES public.teams(uuid) ON DELETE CASCADE;
